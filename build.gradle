plugins {
  id 'org.jetbrains.kotlin.jvm' version '1.3.20'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '5.0.0'
  id 'io.gitlab.arturbosch.detekt' version '1.0.0'
}

group = 'com.service.example'
version = '1.0.0-SNAPSHOT'

repositories {
  mavenCentral()
  jcenter()
}

ext {
  kotlinVersion = '1.3.20'
  vertxVersion = '3.8.0'
  junitJupiterEngineVersion = '5.4.0'
  detektVersion = '1.0.0'
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}

def mainVerticleName = 'com.service.example.application.App'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

configurations {
  ktlint
}

dependencies {
  implementation "io.vertx:vertx-lang-kotlin:$vertxVersion"
  implementation "io.vertx:vertx-lang-kotlin-coroutines:$vertxVersion"
  implementation "io.vertx:vertx-web-client:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-service-proxy:$vertxVersion"
  implementation "io.vertx:vertx-mongo-client:$vertxVersion"
  implementation "io.vertx:vertx-config:$vertxVersion"
  implementation "io.vertx:vertx-config-vault:$vertxVersion"
  implementation "io.vertx:vertx-config-consul:$vertxVersion"
  implementation "io.vertx:vertx-redis-client:$vertxVersion"
  implementation "org.slf4j:jcl-over-slf4j:1.7.20"
  implementation "ch.qos.logback:logback-classic:1.1.7"
  implementation 'software.amazon.awssdk:sqs:2.7.17'

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion"
  testImplementation "org.junit.jupiter:junit-jupiter-api:$junitJupiterEngineVersion"

  detekt "io.gitlab.arturbosch.detekt:detekt-cli:$detektVersion"
  detekt "io.gitlab.arturbosch.detekt:detekt-core:$detektVersion"
  detekt "io.gitlab.arturbosch.detekt:detekt-api:$detektVersion"
  detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:$detektVersion"
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
}

shadowJar {
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task installGitHooks(type: Copy) {
  from new File(rootProject.rootDir, 'pre-commit')
  into { new File(rootProject.rootDir, '.git/hooks') }
  fileMode 0777
}
build.dependsOn installGitHooks

detekt {
  toolVersion = "$detektVersion"
  input = files('src/main/kotlin')
  filters = '.*/resources/.*,.*/build/.*'
  config = files("$projectDir/config/detekt/config.yml")
  baseline = file("$projectDir/config/detekt/baseline.xml")
}

sourceSets {
  main {
    java {
      srcDirs += 'src/main/generated'
    }
  }
}
